name: release-artifacts

on:
  # push:
  #   tags:
  #     - "v*"
  # push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MIX_ENV: prod
  NX_IREE_PREFER_PRECOMPILED: "false"
  BUILD_CACHE: ${{ github.workspace }}/build_cache
  IREE_DIR: ${{ github.workspace }}/build_cache/iree

jobs:
  download_iree:
    runs-on: ARM64
    strategy:
      matrix:
        OTP_VERSION: ["27.0"]
        ELIXIR_VERSION: ["1.15.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install asdf
        uses: asdf-vm/actions/setup@v3

      - name: Install Erlang and Elixir
        run: |
          asdf plugin add erlang
          asdf plugin add elixir
          asdf install erlang ${{ matrix.OTP_VERSION }}
          asdf install elixir ${{ matrix.ELIXIR_VERSION }}
          asdf global erlang ${{ matrix.OTP_VERSION }}
          asdf global elixir ${{ matrix.ELIXIR_VERSION }}
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix packages
        id: cache-mix-deps
        uses: actions/cache@v4
        with:
          key: deps-${{ hashFiles('mix.lock') }}
          path: |
            ./deps

      - name: Get mix deps
        if: steps.cache-mix-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Get IREE version
        id: get-iree-version
        run: echo "iree_version=$(mix iree.version)" >> $GITHUB_ENV

      - name: Cache IREE source code
        id: cache-iree
        uses: actions/cache@v4
        with:
          key: iree-${{ env.iree_version }}
          path: |
            ${{ env.IREE_DIR }}

      - name: Download IREE source code
        if: steps.cache-iree.outputs.cache-hit != 'true'
        run: |
          ./scripts/clone_iree.sh ${{ env.BUILD_CACHE }} ${{ env.iree_version }} ${{ env.IREE_DIR }}

  build_artifacts:
    name: "Build artifacts (${{matrix.build_target}} / Elixir ${{ matrix.ELIXIR_VERSION }} / OTP ${{ matrix.OTP_VERSION }})"
    runs-on: ARM64
    strategy:
      matrix:
        OTP_VERSION: ["27.0"]
        ELIXIR_VERSION: ["1.15.4"]
        build_target:
          - "cpu"
          - "ios"
          - "ios_simulator"
          # - "visionos"
          # - "visionos_simulator"
          # - "watchos"
          # - "watchos_simulator"
          # - "tvos"
          # - "tvos_simulator"
    needs: download_iree
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install asdf
        uses: asdf-vm/actions/setup@v3

      - name: Setup XCode
        run: |
          sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer

      - name: Install Erlang and Elixir
        run: |
          asdf plugin add erlang
          asdf plugin add elixir
          asdf install erlang ${{ matrix.OTP_VERSION }}
          asdf install elixir ${{ matrix.ELIXIR_VERSION }}
          asdf global erlang ${{ matrix.OTP_VERSION }}
          asdf global elixir ${{ matrix.ELIXIR_VERSION }}
          mix local.hex --force
          mix local.rebar --force

      - name: Install build dependencies
        run: |
          brew install cmake ninja

      - name: Cache mix packages
        id: cache-mix-deps
        uses: actions/cache/restore@v4
        with:
          key: deps-${{ hashFiles('mix.lock') }}
          path: |
            ./deps

      - name: Get IREE version
        id: get-iree-version
        run: echo "iree_version=$(mix iree.version)" >> $GITHUB_ENV

      - name: Restore IREE source code
        id: cache-iree
        uses: actions/cache/restore@v4
        with:
          key: iree-${{ env.iree_version }}
          path: |
            ${{ env.IREE_DIR }}

      - name: Build IREE
        run: |
          make compile IREE_DIR=${{ env.IREE_DIR }} IREE_BUILD_TARGET=${{ matrix.build_target }}
          ls ${{ env.IREE_DIR }}/install
